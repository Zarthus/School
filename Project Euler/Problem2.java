package nl.zarthus.euler;

public class Problem2 extends Euler
{
	/*
	 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
	 * By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
	 * find the sum of the even-valued terms.
	 */

	public Problem2()
	{
		this.SOLVED = false;
	}

	@Override
	public void solve()
	{
		// MAX = 4 million as specified by assignment
		// add i to sum when even
		int sum = 0, i = 1, ii = 2, tmp = 0;

		while (i < 4000000)
		{
			if (ii % 2 == 0)
			{
				sum = sum += i;
			}
			tmp = i;
			i = ii;
			ii += tmp;

		}

		System.out.println("Problem 2: " + sum);
	}

	public boolean isEven(int value) // Check is a value is even by getting its remainder
	{
		return value % 2 == 0;
	}
}
